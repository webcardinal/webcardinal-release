class t{constructor(t){this.scannerContainer=t,window.cardinal.barcodeScanner?this.dimensions=window.cardinal.barcodeScanner.dimensions:(this.dimensions=this.getDimensions(this.scannerContainer),window.cardinal.barcodeScanner={dimensions:this.dimensions})}getDimensions(t){return{width:t.offsetWidth,height:t.offsetHeight,frame:.75*Math.min(t.offsetWidth,t.offsetHeight)-40}}addCanvasToView(t,s){let i=document.createElement("canvas");if(i.id=t,i.width=this.dimensions.width,i.height=this.dimensions.height,i.style.position="absolute",i.style.width="100%",i.style.top="0",i.style.left="0","object"==typeof s&&Object.keys(s).forEach((t=>{i.style[t]&&(i.style[t]=s[t])})),this.scannerContainer)return this.scannerContainer.appendChild(i),i}}class s extends t{constructor(t,s){super(t),this.videoSource=s;let i=this.dimensions;this.cropOptions=[(i.width-i.frame)/2,(i.height-i.frame)/2,i.frame,i.frame]}getCropOptions(){return this.cropOptions}createOverlaysCanvases(t,s){return this.lensCanvas=this.addCanvasToView(t),this.overlayCanvas=this.addCanvasToView(s),!!this.lensCanvas&&!!this.overlayCanvas}removeOverlays(){try{this.scannerContainer.removeChild(this.lensCanvas),this.scannerContainer.removeChild(this.overlayCanvas)}catch(t){}}drawOverlay(t){let s,i,h,e;t.length>=2&&(s=t[0].x,i=t[0].y,h=t[1].x,e=t[1].y);let r=s+i+h+e===0;this.overlayCanvas.width=this.dimensions.width,this.overlayCanvas.height=this.dimensions.height;let a=this.cropOptions[0],n=this.cropOptions[1],o=this.cropOptions[2];if(this.overlayCanvas.getContext){let t=this.overlayCanvas.getContext("2d");if(t.lineWidth=5,t.strokeStyle="rgba(72, 217, 96, 0.4)",t.fillStyle="rgba(72, 217, 96, 0.4)",t.clearRect(0,0,this.overlayCanvas.width,this.overlayCanvas.height),t.beginPath(),r)t.lineTo(s,i),t.lineTo(h,e);else{const s=0,i=o-2*s;t.rect(a+s,n+s,i,i)}t.closePath(),t.fill(),t.stroke(),t.strokeStyle="rgb(72, 217, 96)",this.addLensCorners(t,a,n,o,50)}}drawLensCanvas(){let t=this.lensCanvas.getContext("2d"),s=this.dimensions,i=[[0,0],[s.width,0],[s.width,s.height],[0,s.height]],h=(s.width-s.frame)/2,e=(s.height-s.frame)/2,r=s.frame,a=[[h,e],[h,e+r],[h+r,e+r],[h+r,e]];t.clearRect(0,0,s.width,s.height),t.beginPath(),t.moveTo(i[0][0],i[0][1]),t.lineTo(i[1][0],i[1][1]),t.lineTo(i[2][0],i[2][1]),t.lineTo(i[3][0],i[3][1]),t.lineTo(i[0][0],i[0][1]),t.closePath(),t.moveTo(a[0][0],a[0][1]),t.lineTo(a[1][0],a[1][1]),t.lineTo(a[2][0],a[2][1]),t.lineTo(a[3][0],a[3][1]),t.lineTo(a[0][0],a[0][1]),t.closePath(),t.fillStyle="rgba(0, 0, 0, 0.25)",t.fill(),this.addLensCorners(t,h,e,r,50)}addLensCorners(t,s,i,h,e){t.beginPath(),t.moveTo(s,i+e),t.lineTo(s,i),t.lineTo(s+e,i),t.moveTo(s+h-e,i),t.lineTo(s+h,i),t.lineTo(s+h,i+e),t.moveTo(s+h-e,i+h),t.lineTo(s+h,i+h),t.lineTo(s+h,i+h-e),t.moveTo(s,i+h-e),t.lineTo(s,i+h),t.lineTo(s+e,i+h),t.lineWidth=2,t.strokeStyle="rgba(255, 255, 255)",t.stroke()}}export{t as CanvasOverlay,s as VideoOverlay}